plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

base {
    group = "gay.pancake"
    archivesName = "ambient-led"
    version = "1.0.0-SNAPSHOT"
}

application {
    mainClass = 'gay.pancake.ambientled.AmbientLed'
}

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    // add jserial for arduino connection
    implementation 'com.fazecast:jSerialComm:2.10.3'

    // add jna for screen capture
    implementation 'net.java.dev.jna:jna:5.13.0'
    implementation 'net.java.dev.jna:jna-platform:5.13.0'

    // add javacv for screen capture on linux
    implementation 'org.bytedeco:ffmpeg:6.0-1.5.9'
    implementation 'org.bytedeco:ffmpeg-platform:6.0-1.5.9'

    // add gson for json
    implementation 'com.google.code.gson:gson:2.10.1'

    // add diozero for raspberry pi led
    implementation 'com.diozero:diozero-ws281x-java:1.3.5'

    // add lombok
    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

tasks.register('uploadRpi1', Exec) {
    workingDir "${buildDir}/libs"
    commandLine "bash", "-c", "echo put ${base.archivesName.get()}-${version}-all.jar | sftp pancake@192.168.178.54:/home/pancake/ambientled/"
}

tasks.register('uploadRpi2', Exec) {
    workingDir "${buildDir}/libs"
    commandLine "bash", "-c", "echo put ${base.archivesName.get()}-${version}-all.jar | sftp pancake@192.168.178.64:/home/pancake/ambientled/"
}

tasks.register('restartRpi1', Exec) {
    workingDir "${buildDir}/libs"
    commandLine "ssh pancake@192.168.178.54 sudo systemctl restart ambientled".split(" ")
}

tasks.register('restartRpi2', Exec) {
    workingDir "${buildDir}/libs"
    commandLine "ssh pancake@192.168.178.64 sudo systemctl restart ambientled".split(" ")
}

uploadRpi1.dependsOn shadowJar
uploadRpi2.dependsOn shadowJar
restartRpi1.dependsOn uploadRpi1
restartRpi2.dependsOn uploadRpi2
